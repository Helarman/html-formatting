{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helarman\\\\Downloads\\\\work\\\\a1\\\\inki-1\\\\src\\\\components\\\\Renderer\\\\HtmlRenderer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Renderer = () => {\n  _s();\n  const [code, setCode] = useState('');\n  const handleCode = e => {\n    setCode(e.target.value);\n  };\n  var parser = new DOMParser();\n  var parsedHtml = parser.parseFromString(code, \"text/html\");\n  let pTags = parsedHtml.getElementsByTagName(\"p\");\n  let vocab = [];\n  pTags.forEach(function (item) {\n    vocab.push(item.innerHTML);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"OrderNotes\",\n        className: \"my-2 min-h-32 w-full rounded-lg border-gray-200 align-top shadow-sm sm:text-sm p-3\",\n        placeholder: \"Enter HTML\",\n        value: code,\n        onChange: handleCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-gray-800 min-h-32 p-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"flex flex-col\",\n          children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), `${tags}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Renderer, \"DeMoM/F9TqKLFftGs/rnPbEsxbc=\");\n_c = Renderer;\nexport default Renderer;\nvar _c;\n$RefreshReg$(_c, \"Renderer\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Renderer","_s","code","setCode","handleCode","e","target","value","parser","DOMParser","parsedHtml","parseFromString","pTags","getElementsByTagName","vocab","forEach","item","push","innerHTML","children","className","id","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","tags","map","tag","_c","$RefreshReg$"],"sources":["C:/Users/helarman/Downloads/work/a1/inki-1/src/components/Renderer/HtmlRenderer.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\n\r\nconst Renderer = () => {\r\n    const [code, setCode] = useState('');\r\n    const handleCode = (e: any) => { setCode(e.target.value); }\r\n    var parser = new DOMParser();\r\n    var parsedHtml = parser.parseFromString(code, \"text/html\");\r\n    let pTags = parsedHtml.getElementsByTagName(\"p\");\r\n    let vocab = []\r\n    pTags.forEach(function (item) {\r\n        vocab.push(item.innerHTML)\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-col w-full\">\r\n                <textarea\r\n                    id=\"OrderNotes\"\r\n                    className=\"my-2 min-h-32 w-full rounded-lg border-gray-200 align-top shadow-sm sm:text-sm p-3\"\r\n                    placeholder=\"Enter HTML\"\r\n                    value={code}\r\n                    onChange={handleCode}\r\n                ></textarea>\r\n\r\n                <div className=\"border-2 border-gray-800 min-h-32 p-3 \">\r\n                    <ul className=\"flex flex-col\">\r\n                        {tags.map((tag) => <li>{tag}</li>)}\r\n                    </ul>\r\n                </div>\r\n                {`${tags}`}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Renderer;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,UAAU,GAAIC,CAAM,IAAK;IAAEF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAAE,CAAC;EAC3D,IAAIC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;EAC5B,IAAIC,UAAU,GAAGF,MAAM,CAACG,eAAe,CAACT,IAAI,EAAE,WAAW,CAAC;EAC1D,IAAIU,KAAK,GAAGF,UAAU,CAACG,oBAAoB,CAAC,GAAG,CAAC;EAChD,IAAIC,KAAK,GAAG,EAAE;EACdF,KAAK,CAACG,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC1BF,KAAK,CAACG,IAAI,CAACD,IAAI,CAACE,SAAS,CAAC;EAC9B,CAAC,CAAC;EAEF,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA;MAAKuB,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACjCtB,OAAA;QACIwB,EAAE,EAAC,YAAY;QACfD,SAAS,EAAC,oFAAoF;QAC9FE,WAAW,EAAC,YAAY;QACxBf,KAAK,EAAEL,IAAK;QACZqB,QAAQ,EAAEnB;MAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAEZ9B,OAAA;QAAKuB,SAAS,EAAC,wCAAwC;QAAAD,QAAA,eACnDtB,OAAA;UAAIuB,SAAS,EAAC,eAAe;UAAAD,QAAA,EACxBS,IAAI,CAACC,GAAG,CAAEC,GAAG,iBAAKjC,OAAA;YAAAsB,QAAA,EAAKW;UAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EACJ,GAAEC,IAAK,EAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC,gBACR,CAAC;AAEX,CAAC;AAAC1B,EAAA,CA/BID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}